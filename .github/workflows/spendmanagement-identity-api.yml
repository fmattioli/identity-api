on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  VERSION_UPDATE_TYPE: "value"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install .NET 8
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8

    - name: Restore dependencies
      run: dotnet restore src/Identity.Api/Identity.Api.csproj

    - name: Determinar Tipo de Mudança
      id: determine_change_type
      run: |
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B $GITHUB_REF)
          echo ${{ github.event.head_commit.message }}
          echo $LAST_COMMIT_MESSAGE
          if echo "$LAST_COMMIT_MESSAGE" | grep -qiE "feat"; then
            echo "VERSION_UPDATE_TYPE=MINOR" >> $GITHUB_ENV
          fi
          if echo "$LAST_COMMIT_MESSAGE" | grep -qiE "fix"; then
            echo "VERSION_UPDATE_TYPE=REVISION" >> $GITHUB_ENV
          fi
      
    - name: Print Update type
      run: |
          echo "Tipo de Mudança: $VERSION_UPDATE_TYPE"

    - name: Bump version - MINOR
      if: env.VERSION_UPDATE_TYPE == 'MINOR'
      uses: KageKirin/bump-csproj-version@v1.0.0
      with:
        file: "src/Identity.Api/Identity.Api.csproj"
        minor: true

    - name: Bump version - PATCH
      if: env.VERSION_UPDATE_TYPE == 'PATCH'
      uses: KageKirin/bump-csproj-version@v1.0.0
      with:
        file: "src/Identity.Api/Identity.Api.csproj"
        patch: true

    - name: Commit new version
      run: |
          git config user.name "CI - Build - Incrementing version"
          git config user.email "deploy@spendmanagement.com"
          git add .
          git commit -m "CI: bump version to ${{ steps.test.package_version.version }}"
          git tag -m "CI: create new tag" v${{ steps.test.package_version.version }}
          git push
          
  
