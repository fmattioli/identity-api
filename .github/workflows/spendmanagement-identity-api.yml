name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore src/SpendManagement.Identity.API/SpendManagement.Identity.API.csproj
    - name: Build
      run: dotnet build --no-restore --configuration Release src/SpendManagement.Identity.API/SpendManagement.Identity.API.csproj

  unit-tests:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies for unit tests
        run: dotnet restore tests/SpendManagement.Identity.UnitTests/SpendManagement.Identity.UnitTests.csproj
      - name: Build project
        run: dotnet build --no-restore --configuration Release tests/SpendManagement.Identity.UnitTests/SpendManagement.Identity.UnitTests.csproj
      - name: Run unit tests
        run: dotnet test --verbosity normal tests/SpendManagement.Identity.UnitTests/SpendManagement.Identity.UnitTests.csproj

  integration-tests:
    runs-on: ubuntu-latest
    needs: [unit-tests]
    steps:
      - name: Setup PostgreSQL
        run: |
          docker run -d --name postgres -p 5432:5432 \
            -e POSTGRES_PASSWORD=postgres \
            --health-cmd pg_isready \
            --health-interval 10s \
            --health-timeout 5s \
            --health-retries 5 \
            postgres
  
      - name: Wait for PostgreSQL to start
        run: |
          until docker exec postgres pg_isready; do
            sleep 1;
          done

   - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Run integration tests
        run: |
          dotnet restore tests/SpendManagement.IntegrationTests/SpendManagement.IntegrationTests.csproj
          dotnet build --no-restore --configuration Release tests/SpendManagement.IntegrationTests/SpendManagement.IntegrationTests.csproj
          dotnet test --verbosity normal tests/SpendManagement.IntegrationTests/SpendManagement.IntegrationTests.csproj      

  publish-docker-image:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t fmattioli/spendmanagement-identity-api:1.0.0.5 .
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Push Docker image to Docker Hub
        run: |
          docker push fmattioli/spendmanagement-identity-api:1.0.0.5
          docker tag fmattioli/spendmanagement-identity-api:1.0.0.5 fmattioli/spendmanagement-identity-api:latest
          docker push fmattioli/spendmanagement-identity-api:latest


