name: Bump build version

on:
  workflow_run:
    workflows: ["build_and_run_tests"]
    types:
      - completed

env:
  VERSION_UPDATE_TYPE: "value"

jobs:
  bump-project-version:
    runs-on: ubuntu-latest
    name: Build and bump version
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Determinar Tipo de MudanÃ§a
        id: determine_change_type
        run: |
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          if echo "$LAST_COMMIT_MESSAGE" | grep -qiE "feat"; then
            echo "VERSION_UPDATE_TYPE=MINOR" >> $GITHUB_ENV
          fi
          if echo "$LAST_COMMIT_MESSAGE" | grep -qiE "fix"; then
            echo "VERSION_UPDATE_TYPE=PATCH" >> $GITHUB_ENV
          fi

      - name: Bump version - MINOR
        if: env.VERSION_UPDATE_TYPE == 'MINOR'
        uses: KageKirin/bump-csproj-version@v1.0.0
        with:
          file: "src/Identity.Api/Identity.Api.csproj"
          minor: true

      - name: Bump version - PATCH
        if: env.VERSION_UPDATE_TYPE == 'PATCH'
        uses: KageKirin/bump-csproj-version@v1.0.0
        with:
          file: "src/Identity.Api/Identity.Api.csproj"
          patch: true

      - name: Commit new version
        run: |
          git config user.name "CI - Build - Incrementing version"
          git config user.email "deploy@spendmanagement.com"
          git add .
          git commit -m "CI: bump version to ${{ steps.test.package_version.version }}"
          git tag -m "CI: create new tag" v${{ steps.test.package_version.version }}
          git push

  publish-docker-image:
    runs-on: ubuntu-latest
    needs: [bump-project-version]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Display appsettings before
        run: cat src/Identity.Api/appsettings.Development.json
      - name: Change connection string
        run: |
          sed -i 's/localhost/postgresql/g' src/Identity.Api/appsettings.Development.json
          working-directory: ${{ github.workspace }}
      - name: Display appsettings after
        run: cat src/Identity.Api/appsettings.Development.json
      - name: Build Docker image
        run: docker build -t fmattioli/spendmanagement-identity-api:1.0.0.5 .
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Push Docker image to Docker Hub
        run: |
            docker push fmattioli/spendmanagement-identity-api:1.0.0.5
            docker tag fmattioli/spendmanagement-identity-api:1.0.0.5 fmattioli/spendmanagement-identity-api:latest
            docker push fmattioli/spendmanagement-identity-api:latest
